package com.darkhouse.shardwar.Logic.GameEntity.Spells;

import com.darkhouse.shardwar.Logic.GameEntity.GameObject;
import com.darkhouse.shardwar.Logic.GameEntity.Spells.Effects.Effect;
import com.darkhouse.shardwar.Logic.GameEntity.Tower.Tower;
import com.darkhouse.shardwar.Logic.GameEntity.Wall.Wall;
import com.darkhouse.shardwar.Player;

import java.util.ArrayList;

public class Vulnerability extends Spell {

    public static class P extends SpellPrototype{

        private int bonusDmg;

        public P(int bonusDmg) {
            super("vulnerability", TargetType.VLINE, FieldTarget.ENEMY, Tower.class, Wall.class);
            this.bonusDmg = bonusDmg;
        }

        @Override
        public String getTooltip() {
            return "";
        }

        @Override
        public Spell createSpell(Player player) {
            return new Vulnerability(player, this);
        }
    }

    public class VulnerabilityEffect extends Effect implements Effect.IGetDmg {

        private int bonusDmg;

        public VulnerabilityEffect(int duration, int bonusDmg) {
            super("vulnerability", false, duration, IGetDmg.class);
            this.bonusDmg = bonusDmg;
        }

        @Override
        public void apply() {

        }

        @Override
        public void dispell() {

        }

        @Override
        public int getDmg(int dmg) {
            return dmg + bonusDmg;
        }
    }

    private int bonusDmg;

    public Vulnerability(Player owner, P prototype) {
        super(owner, prototype);
        this.bonusDmg = prototype.bonusDmg;
    }

    @Override
    public void use(ArrayList<GameObject> targets) {
        for (GameObject g:targets){
            g.addEffect(new VulnerabilityEffect(2, bonusDmg).setOwner(g));
        }
    }
}
